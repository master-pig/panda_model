<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="load_robot_description" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find hitbot_scara_model)/world/strawberry_world.sdf"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <param name="robot_description" textfile="$(find panda_model)/urdf/panda.urdf"/>

  <!-- 将关节控制器的配置参数加载到参数服务器中 -->
  <rosparam file ="$(find panda_model)/config/joint_trajectory_controller.yaml" command="load"/>
  
  <!-- 加载controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller robot_arm_controller hand_ee_controller"/>
  
  <!-- 运行robot_state_publisher节点，发布tf  -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" /> -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model panda -param robot_description" respawn="false" output="screen" />
</launch>
